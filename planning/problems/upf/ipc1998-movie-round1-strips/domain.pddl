(define (domain strips_movie_x_1-domain)
  (:requirements :strips)
  (:predicates
    (movie_rewound)
    (counter_at_two_hours)
    (counter_at_other_than_two_hours)
    (counter_at_zero)
    (have_chips)
    (have_dip)
    (have_pop)
    (have_cheese)
    (have_crackers)
    (chips ?x)
    (dip ?x)
    (pop ?x)
    (cheese ?x)
    (crackers ?x)
  )
  (:action rewind_movie_2
    :parameters ()
    :precondition (and (counter_at_two_hours))
    :effect (and (movie_rewound))
  )
  (:action rewind_movie
    :parameters ()
    :precondition (and (counter_at_other_than_two_hours))
    :effect (and (movie_rewound) (not (counter_at_zero)))
  )
  (:action reset_counter
    :parameters ()
    :precondition ()
    :effect (and (counter_at_zero))
  )
  (:action get_chips
    :parameters ( ?x)
    :precondition (and (chips ?x))
    :effect (and (have_chips))
  )
  (:action get_dip
    :parameters ( ?x)
    :precondition (and (dip ?x))
    :effect (and (have_dip))
  )
  (:action get_pop
    :parameters ( ?x)
    :precondition (and (pop ?x))
    :effect (and (have_pop))
  )
  (:action get_cheese
    :parameters ( ?x)
    :precondition (and (cheese ?x))
    :effect (and (have_cheese))
  )
  (:action get_crackers
    :parameters ( ?x)
    :precondition (and (crackers ?x))
    :effect (and (have_crackers))
  )
)